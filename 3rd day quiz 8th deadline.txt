Question1
Given an integer N, print N stars in a single line.

For example if N = 5 then pattern will be like:

Input Format

Single line input contains a single integer N.

Constraints

2 <= N <= 100

Output Format

Output N stars in a single line.

Sample Input 0

3
Sample Output 0

***

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=0;i<a;i++){
            System.out.print("*");
        }
    }
}

Question2:
Given two integers N and M as inputs, print a rectangle of N * M stars.

For example if N = 3, M = 4 then pattern will be like:

Input Format

First line of input contains an integers N (no of rows).

Second line of input contains an integer M (no of cols).

Constraints

2 <= N, M <= 100

Output Format

Output N * M rectangle of stars.

Sample Input 0

2
3
Sample Output 0

***
***

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        for (int i=1;i<=a;i++){
            for (int j=1;j<=b;j++){
                System.out.print("*");
            }
            System.out.println();
        }
        
    }
}

Question3:
Take an integer N as input, print the corresponding stair pattern for N.

Input Format

First and only line of input contains a single integer N.

Constraints

1

Output Format

Output the stair pattern corresponding to the given N.

Sample Input 0

4
Sample Output 0

*
**
***
****

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();
        }
    }
}


Question4:
Take an integer N as input, print the corresponding pattern for N.

Input Format

First and only line of input contains a single integer N.

Constraints

1<=N<=5

Output Format

Output the pattern corresponding to the given N.

Sample Input 0

5
Sample Output 0

1
1 
1 3
1 3 
1 3 5
Explanation 0

1_ 1_ 1_3_ 1_3_ 1_3_5

_ is used to just show u space please use space inplace of underscore

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            for(int j=1;j<=i;j++){
                if(j%2!=0)
                {
                    System.out.print(j+" ");
                }
            }
            System.out.println();
        }
    }
}

Question5:
Print a pattern consisting of N rows, where each row contains an asterisk (*) at the beginning and end of the line, with N-2 spaces in between.

The Pattern should look like:


Print the above pattern for a total of N Rows.

Refer Example ouput, for better clarification.

Input Format

First and only line of input contains a single integer N.

Constraints

1<=N<=100

Output Format

Output the pattern corresponding to the given N.

Sample Input 0

4
Sample Output 0

*  *
*  *
*  *
*  *
Explanation 0

Here N = 4, So each row should have N - 2 spaces which is 2. Thus the N rows(i.e, 4 rows) should be in the form (asterisk)(2 spaces)(asterisk)

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=0;i<a;i++){
            System.out.print("*");
            for(int j=0;j<a-2;j++){
                System.out.print(" ");
            }
            System.out.print("*");
            System.out.println();
        }
    }
}

Question6
Take an integer N as input, print the corresponding pattern for N.

Input Format

First and only line of input contains a single integer N.

Constraints

1 <= N <= 100

Output Format

Output the pattern corresponding to the given N.

Sample Input 0

2
Sample Output 0

 *
**

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */7
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            for(int j=1;j<=(a-i);j++){
                System.out.print(" ");
            }
            for(int k=1;k<=i;k++){
                System.out.print("*");
            }
            System.out.println();
        }
    }
}

Question7:
Write a program to print all Natural numbers from 1 to N where you have to take N as input from user

Input Format

A single line representing N

Constraints

1 <= N <= 1000000

Output Format

N space separated integers from 1 to N.

Sample Input 0

3
Sample Output 0

1 2 3

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            System.out.print(i+" ");
        }
    }
}

Question8:
Write a program to print all odd numbers from 1 to N where you have to take N as input from user. Here N is inclusive.

Input Format

A single line representing N

Constraints

1 <= N <= 2000000

Output Format

All odd numbers from 1 to N separated by spaces.

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            if(!(i%2==0)){
                System.out.print(i+" ");
            }
        }
    }
}

Question9:
Write a program to find sum all Natural numbers from 1 to N where you have to take N as input from user

Input Format

A single line representing N

Constraints

NA

Output Format

A single integer showing sum of all Natural numbers from 1 to N

Sample Input 0

5
Sample Output 0

15

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int sum = 0;
        for(int i=1;i<=a;i++){
            sum+=i;
        }
        System.out.println(sum);
    }
}

Question10:
Write a program to print all Natural numbers from N to 1 where you have to take N as input from user

Input Format

A single line representing N

Constraints

1 <= N <= 10000000

Output Format

N space separated integers from N to 1.

Sample Input 0

5
Sample Output 0

5 4 3 2 1

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int j=a;j>0;j--){
            System.out.print(j+" ");
        }
    }
}

Question11:
Write a program to print the multiplication table of the number entered by the user, N.

The table for input N = 5 should get displayed in the following form:

5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25 5 * 6 = 30 5 * 7 = 35 5 * 8 = 40 5 * 9 = 45 5 * 10 = 50

Input Format

First and only line of input contains an integer N.

Constraints

1 <= N <= 100

Output Format

Output the Multiplication Table in the given form.

Sample Input 0

5
Sample Output 0

5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=10;i++){
            System.out.print(a+" * "+i+" = "+(a*i));
            System.out.println();
        }
    }
}

Question12:
You are given two integers A and B. You have to find the value of A^B.

NOTE: The value of A^B will always be less than or equal to 10^9.

Input Format

First line of the input contains a single integer A.

Second line of the input contains a single integer B.

Constraints

1 <= A, B <= 1000

Output Format

Print a single integer in single line.

Sample Input 0

2
3
Sample Output 0

8
Explanation 0

For A = 2 and B = 3, the value of 2^3 = 2 * 2 * 2 = 8.

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        System.out.println((int)Math.pow(a,b));
    }
}

Question13:
Take an integer N as input and print the count of its factors. The factor of a number is the number that divides it perfectly leaving no remainder.

Example: 1, 2, 3, and 6 are factors of 6

Input Format

The first and only line of input contains a single integer N.

Constraints

1 <= N <= 300

Output Format

Print the count of factors of N.

Sample Input 0

5
Sample Output 0

2
Explanation 0

Factors of 5 are 1 and 5.

Sample Input 1

10
Sample Output 1

4
Explanation 1

Factors of 10 are 1, 2, 5 and 10.

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int count =0;
        for(int i=1;i<=a;i++){
            if(a%i==0){
                count+=1;
            }
        }
        System.out.println(count);
    }
}

Question14:
Take an integer A as input, you have to tell whether it is a prime number or not.

A prime number is a natural number greater than 1 which is divisible only by 1 and itself.

Input Format

First and only line of the input contains a single integer A.

Constraints

1 <= A <= 106

Output Format

Print YES if A is a prime, else print NO.

Sample Input 0

3
Sample Output 0

YES
Explanation 0

3 is a prime number as it is only divisible by 1 and 3.

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        boolean flag= false;
        if(a<=0){
            flag= false;
        }
        else if(a==1){
                flag = true;
        }
        else{
                for(int i=2;i<a;i++){
                    if(a%i==0){
                        flag= true;
                        break;
                    }
                }    
            }
        if(flag == true){
            System.out.println("NO");
        }
        else{
            System.out.println("YES");
        }
    }
}

Question15:
Given the Number of Test Cases as T, For each test case, take an integer N as input, you have to tell whether it is a perfect number or not.

A perfect number is a positive integer that is equal to the sum of its proper positive divisors (excluding the number itself). A positive proper divisor divides a number without leaving any remainder.

Input Format

The first line of the input contains a single integer T. Each of the next T lines contains a single integer N.

Constraints

1 <= T <= 10 1 <= N <= 106

Output Format

For each testcase, print YES if the given integer is perfect, else print NO, in a separate line

Sample Input 0

2
4
6
Sample Output 0

NO
YES
Explanation 0

For the first test case A = 4, the answer is "NO" as sum of its proper divisors = 1 + 2 = 3, is not equal to 4. For the second test case A = 6, the answer is "YES" as sum of its proper divisors = 1 + 2 + 3 = 6, is equal to 6.

Sample Input 1

1
3
Sample Output 1

NO
Explanation 1

For the first test case A = 3, the answer is "NO" as sum of its proper divisors = 1, is not equal to 3.

Program:
import java.io.*;
import java.util.*;

public class Solution {
    static boolean Perfect(int a){
        int sum=0;
        for(int i=1;i<a;i++){
            if(a%i==0){
                sum+=i;
            }
        }
        if(sum==a){
            return true;
        }
        else{
                return false;
            }
        }
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
         
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=0;i<a;i++){
            int b = obj.nextInt();
            if (Perfect(b)){
                System.out.println("YES");
            }
            else{
                System.out.println("NO");
            }
        }
    }
}

Question16:
Take T (number of test cases) as input. For each test case, take integer N as input and Print the count of digits of that number.

Note: No of digits for number 0 is considered as 1.

Input Format

The first line is the number T which denotes the total number of test cases. Next T lines contain an integer N for which you have to print the number of digits.

Constraints

NA

Output Format

For T different Numbers, Print the number of digits in separate lines.

Sample Input 0

2
0
1
Sample Output 0

1
1
Explanation 0

0 and 1 both have only one digit.

Sample Input 1

2
100
10101
Sample Output 1

3
5
Explanation 1

100 has three digits and 10101 has 5 digits.

Program:
import java.io.*;
import java.util.*;

public class Solution {
    static int NumberOfDigits(int a ){
        int count = 0;
        if(a==0){
            return 1;
        }
        else{
            while(a>0){
                int rem = a%10;
                count=count+1;
                a=a/10;
            }
        }
        
        return count;
    }
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=0;i<a;i++){
            int b = obj.nextInt();
            int c = NumberOfDigits(b);
            System.out.println(c);    
        }
    }
}

Question17:
You are given an integer N and the task is to reverse the digits of the given integer. Return 0 if the result overflows and does not fit in a 32 bit signed integer

Look at the example for clarification.

Input Format

Input an Integer

Constraints

N belongs to the Integer limits.

Output Format

Return a single integer denoting the reverse of the given integer.

Program:
import java.io.*;
import java.util.*;

public class Solution {
    static int Reverse(int a){
        int sum=0;
        while(a>0){
            int rem = a%10;
            sum=sum*10+rem;
            a=a/10;
        }
        return (sum);
    }
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int sum = 0;
        if(a<0){
            int b = -1*a;
            int c = Reverse(b);
            System.out.println((-1)*c);
        }
        else{
            int d = Reverse(a);
            System.out.println(d);
        }
        
    }
}

Question18:
You are given an integer N you need to print all the Armstrong Numbers between 1 to N. (N inclusive).

If sum of cubes of each digit of the number is equal to the number itself, then the number is called an Armstrong number.

For example, 153 = ( 1 * 1 * 1 ) + ( 5 * 5 * 5 ) + ( 3 * 3 * 3 ).

Note: All the test cases in this problem are limited to 3 digit numbers.

Input Format

First and only line of input contains an integer N.

Constraints

1 <= N <= 500

Output Format

Output all the Armstrong numbers in range [1,N] each in a new line.

Sample Input 0

20
Sample Output 0

1
Explanation 0

1 is an armstrong number.

Sample Input 1

200
Sample Output 1

1
153
Explanation 1

1 and 153 are armstrong number under 200.

Program:
import java.io.*;
import java.util.*;

public class Solution {
    
    static boolean ArmStrong(int a){
        int sum=0;
        int d = a;
         while(a>0){
            int rem = a%10;
            sum= sum+(int)Math.pow(rem,3);
            a=a/10;
        }
        if(sum==d){
            return true;
        }
        else{
            return false;
        }
    }
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        
        
        for(int i=1;i<=a;i++){
            if(ArmStrong(i)){
                System.out.println(i);
            }
        }
       
    }
}

Question19:
You are given an integer N you need to print all the Prime Numbers between 1 and N.

Prime numbers are numbers that have only 2 factors: 1 and themselves. For example, the first 5 prime numbers are 2, 3, 5, 7, and 11.

Input Format

First and only line of input contains a single integer N.

Constraints

1 <= N <= 300

Output Format

Print all the prime numbers between between 1 and N each in a new line.

Sample Input 0

5
Sample Output 0

2
3
5
Explanation 0

Prime numbers between [1, 5] are (2, 3, 5).

Sample Input 1

10
Sample Output 1

2
3
5
7
Explanation 1

Prime numbers between [1, 10] are (2, 3, 5, 7)

Program:
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isPrime(int a){
        if(a<=1){
            return false;
        }
        for(int i=2;i<a;i++){
            if(a%i==0){
                return false;
            }
        }
        return true;
    }
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=0;i<=a;i++){
            if(isPrime(i)){
                System.out.println(i);
            }
        }
    }
}

Question20:
Implement a program that takes two positive integers A and B in the input and prints their LCM.

Definition of LCM : The Least Common Multiple or LCM of two numbers say A and B, is denoted as LCM (A,B). And the LCM is the smallest or least positive integer that is divisible by both A and B.

Input Format

Two space separated integers A and B in the input.

Constraints

1 <= A,B <= 200

Output Format

Output a single integer that is the LCM of A and B.

Sample Input 0

5
10
Sample Output 0

10
Explanation 0

LCM(5,10)=10

Sample Input 1

2
3
Sample Output 1

6
Explanation 1

LCM(2,3)=6

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a= obj.nextInt();
        int b = obj.nextInt();
        int lcm = 0,gcd=0;
        for(int i =1;i<=a&&i<= b;++i)   
        {  
            if(a%i==0&&b%i == 0)  
            gcd=i;  
        }  
        lcm = (a * b) / gcd;  
        System.out.println(lcm);  
    }  
}

Question21:
You are given an integer A as input and you need to determine whether it is a palindrome or not. A palindrome integer is one whose digits, when reversed, result in the same number. For example, 121 is a palindrome because its reverse is also 121, but 123 is not a palindrome because its reverse is 321.

Note: The given integer will not have any leading zeros.

Input Format

First and the only line contains a single integer A.

Constraints

1 <= A <= 10^6

Output Format

Print Yes if it is palindromic, else print No.

Sample Input 0

120
Sample Output 0

No
Explanation 0

For A = 120, reverse(A) = reverse(120) = 021 = 21 (removing leading zeroes). 120 is not equal to 21

Sample Input 1

1001
Sample Output 1

Yes
Explanation 1

For A = 1001, reverse(A) = reverse(1001) = 1001, which is same as A.

Sample Input 2

1001
Sample Output 2

Yes
Explanation 2

For A = 1001, reverse(A) = reverse(1001) = 1001, which is same as A.

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = a;
        String sum="";
        while(a>0){
            int rem = a%10;
            sum=sum+Integer.toString(rem);
            a=a/10;
        }
        if(Integer.parseInt(sum)==b){
            System.out.println("Yes");
        }
        else{
            System.out.println("No");
        }
    }
}

Question22:
Given an integer N, print the corresponding Inverted Half Pyramid pattern for N.

Input Format

First and only line of input contains a single integer N.

Constraints

NA

Output Format

Output the Inverted Half Pyramid pattern corresponding to the given N.

Sample Input 0

5
Sample Output 0

*****
****
***
**
*

Program:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            for(int j=1;j<=(a+1-i);j++){
                System.out.print("*");
            }
            System.out.println();
        }
    }
}

Question23:
Take an integer N as input, print the corresponding pattern for N. please see the sample test case to get clear undestanding of test case

Input Format

First and only line of input contains a single integer N.

Constraints

1<=N<=100

Output Format

Output the pattern corresponding to the given N.

Sample Input 0

2
Sample Output 0

**
 *
Explanation 0

** _*

Note : Here '_' represents space for explanation purpose only. You have to print space in your code.

Sample Input 1

3
Sample Output 1

***
 **
  *
Explanation 1

** _* Note : Here '_' represents space for explanation purpose only. You have to print space in your code.

Sample Input 2

4
Sample Output 2

****
 ***
  **
   *

Program:

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            for(int k=1;k<i;k++){
                System.out.print(" ");
            }
            for(int j=1;j<=a+1-i;j++){
                System.out.print("*");
            }
            System.out.println();
        }
    }
}

Question24:
Take an integer N as input, print the corresponding pattern for N.

Input Format

First and only line of input contains a single integer N.

Constraints

N is within range

Output Format

Output the pattern corresponding to the given N.

Sample Input 0

3
Sample Output 0

***
* *
***
Explanation 0

Note : Except for the first line and the last line, every line will have N-2 spaces between the two stars.

Sample Input 1

5
Sample Output 1

*****
*   *
*   *
*   *
*****
Explanation 1

Note : Except for the first line and the last line, every line will have N-2 spaces between the two stars.

Program:

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        for(int i=1;i<=a;i++){
            for(int j=1;j<=a;j++){
                if(i==1||i==a||j==1||j==a){
                    System.out.print("*");
                }
                else{
                    System.out.print(" ");
                }
                
            }
            System.out.println();
        }
    }
}

Question25:
Write a program to input an integer N from user and print hollow inverted right triangle star pattern of N lines using '*'.

See example for clarifications.

Input Format

First line is an integer N

Constraints

1 <= N <= 1000

Output Format

N lines conatining only char '*' as per the question.

Sample Input 0

5
Sample Output 0

*****
*  *
* *
**
*
Sample Input 1

4
Sample Output 1

****
* *
**
*

Program:
import java.io.*;
import java.util.*;
public class Solution {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int N = s.nextInt(); // Read the value of N from input
        for (int i = 1; i <= N; i++) {
            for (int j = i; j <= N; j++) {
                if (i == 1 || j == i || j == N) {
                    System.out.print("*"); // Print '*' if any of the conditions are met
                } else {
                    System.out.print(" "); // Print a space otherwise
                }
            }
            System.out.println(); // Move to the next line after each row
        }
    }
}